version: '3.8'

services:
  # Backend API Service - Development
  backend-dev:
    build:
      context: ./back-end
      dockerfile: Dockerfile
      target: base
    container_name: iot2-backend-dev
    ports:
      - "3000:3000"
      - "9229:9229" # Debug port
    environment:
      - NODE_ENV=development
      - SERVER_PORT=3000
      - FRONT_END_HOST=http://localhost:3003
    env_file:
      - ./back-end/.env
    volumes:
      - ./back-end:/app
      - backend_node_modules:/app/node_modules
      - ./back-end/.env:/app/.env:ro
    networks:
      - iot2-network
    command: npm run start:debug
    restart: unless-stopped

  # Frontend Dashboard Service - Development
  frontend-dev:
    build:
      context: ./front-end
      dockerfile: Dockerfile
      target: base
    container_name: iot2-frontend-dev
    ports:
      - "3003:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_ENDPOINT=http://localhost:3000
      - NEXT_PUBLIC_WEBSOCKET=ws://localhost:3000
    env_file:
      - ./front-end/.env
    volumes:
      - ./front-end:/app
      - frontend_node_modules:/app/node_modules
      - ./front-end/.env:/app/.env.local:ro
    networks:
      - iot2-network
    command: npm run dev
    depends_on:
      - backend-dev
    restart: unless-stopped

networks:
  iot2-network:
    driver: bridge
    name: iot2-network-dev

volumes:
  backend_node_modules:
    name: iot2-backend-node-modules-dev
  frontend_node_modules:
    name: iot2-frontend-node-modules-dev
